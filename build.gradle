plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.springframework.boot' version '3.2.0'
    id 'idea'
}

group = 'eda'
version = '1.0-SNAPSHOT'

// Set the main class
springBoot {
    mainClass = 'eda.main.EDAReferenceApplication'
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-integration'

    // JMS Support
    implementation 'org.springframework.boot:spring-boot-starter-artemis'
    // OR for ActiveMQ
    // implementation 'org.springframework.boot:spring-boot-starter-activemq'

    // Kafka Support
    implementation 'org.springframework.kafka:spring-kafka'

    // Resilience4j - Circuit Breaker, Retry, Time Limiter
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.3.0'
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker:2.3.0'
    implementation 'io.github.resilience4j:resilience4j-retry:2.3.0'
    implementation 'io.github.resilience4j:resilience4j-timelimiter:2.3.0'
    // https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-all
    implementation 'io.github.resilience4j:resilience4j-all:2.3.0'
//    implementation 'io.github.resilience4j:resilience4j-decorators:2.3.0'

    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'

    // Reactor Core (for WebFlux)
    implementation 'io.projectreactor:reactor-core'

    // Async Support
    implementation 'org.springframework:spring-context'

    // Testing Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // Optional: For enhanced testing
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.1'
}


// Configuration for Java compilation
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs.addAll(['-parameters', '-Xlint:unchecked'])
}

// Test configuration
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

// Optional: Fat JAR configuration
jar {
    enabled = false
    archiveClassifier = ''
}